FROM ubuntu:latest

EXPOSE 5001
EXPOSE 3333

# Create app directory
WORKDIR /usr/src/app

### Needed Packages for the Worker
RUN apt-get update && apt-get install -y \
    build-essential \
    wget \
    curl \
    g++ \
    git \
    inetutils-ping

# INstall docker.io
RUN apt-get install ca-certificates curl software-properties-common -y
RUN install -m 0755 -d /etc/apt/keyrings
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
RUN chmod a+r /etc/apt/keyrings/docker.asc

RUN echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
      $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
      tee /etc/apt/sources.list.d/docker.list > /dev/null \
    && apt-get update \
    && apt-get install docker-ce docker-ce-cli containerd.io -y

RUN apt-get update \
    && apt-get install -y make libssl-dev zlib1g-dev

RUN curl https://pyenv.run | bash
# RUN echo 'export PATH="$HOME/.pyenv/bin:$PATH"' >> ~/.bashrc



# Bundle app source
RUN mkdir -p /usr/src/app
COPY .prettierignore .prettierrc .eslintrc.js .gitignore ./
COPY package.json yarn.lock ./
COPY client/src /usr/src/app/client/src
COPY client/public /usr/src/app/client/public
COPY client/package.json /usr/src/app/client/package.json
COPY client/yarn.lock /usr/src/app/client/yarn.lock
COPY client/tsconfig.json /usr/src/app/client/tsconfig.json
COPY client/.prettierrc /usr/src/app/client/.prettierrc
COPY nest-cli.json tsconfig.build.json tsconfig.json ./
COPY src /usr/src/app/src


ENV NODE_VERSION 20.11.1

#
RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash \
    && export NVM_DIR="$HOME/.nvm" \
    && \. $NVM_DIR/nvm.sh \
    && echo "source $NVM_DIR/nvm.sh" >> ~/.bashrc \
    && nvm install $NODE_VERSION \
    && nvm alias default $NODE_VERSION \
    && nvm use default \
    && npm install -g yarn \
    && yarn --version \
    && node --version \
    && npm --version

# add node and npm to path so the commands are available
ENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules
ENV PATH /root/.nvm/versions/node/v$NODE_VERSION/bin:/root/.pyenv/bin:$PATH

RUN pyenv install 3.8.12
RUN pyenv install 3.9.7
RUN pyenv install 3.10.2
RUN pyenv install 3.11.0
RUN pyenv install 3.12.0

ENV PATH /root/.pyenv/versions/3.8.12/bin:/root/.pyenv/versions/3.9.7/bin:/root/.pyenv/versions/3.10.2/bin:/root/.pyenv/versions/3.11.0/bin:/root/.pyenv/versions/3.12.0/bin:$PATH

RUN yarn install

RUN yarn run build

CMD [ "yarn", "run", "start:prod"]
