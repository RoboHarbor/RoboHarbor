apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: roboharbor
rules:
  - apiGroups: [ "apps" ]
    resources: [ "pods", "services", "deployments" ]
    verbs: [ "get", "list", "watch", "create", "delete" ]
  - apiGroups: [ "batch" ]
    resources: [ "jobs" ]
    verbs: [ "get", "list", "watch", "create", "delete" ]
  - apiGroups: [ "extensions" ]
    resources: [ "deployments" ]
    verbs: [ "get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: roboharbor
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: roboharbor
subjects:
  - kind: ServiceAccount
    name: roboharbor
    namespace: default
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: roboharbor
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: roboharbor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: roboharbor
  template:
    metadata:
      labels:
        app: roboharbor
    spec:
      serviceAccountName: roboharbor
      automountServiceAccountToken: true
      containers:
        - name: roboharbor
          image: roboharbor/roboharbor:latest
          ports:
            - containerPort: 3000
            - containerPort: 5001
          env:
            - name: DB_USER
              value: "roboharbor"
            - name: DB_PASS
              value: "password"
            - name: DB
              value: "roboharbor"
            - name: DB_HOST
              value: "postgresdb1-postgresql"
---
apiVersion: v1
kind: Service
metadata:
  name: roboharbor
spec:
  selector:
    app.kubernetes.io/name: roboharbor
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5001
      name: web
    - protocol: TCP
      port: 5001
      targetPort: 5001
      name: api
